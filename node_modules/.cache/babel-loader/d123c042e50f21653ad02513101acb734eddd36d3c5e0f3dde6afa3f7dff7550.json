{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shouldPolyfill = void 0;\nvar intl_localematcher_1 = require(\"@formatjs/intl-localematcher\");\nvar supported_locales_generated_1 = require(\"./supported-locales.generated\");\nfunction supportedLocalesOf(locale) {\n  if (!locale) {\n    return true;\n  }\n  var locales = Array.isArray(locale) ? locale : [locale];\n  return Intl.PluralRules.supportedLocalesOf(locales).length === locales.length;\n}\nfunction shouldPolyfill(locale) {\n  if (locale === void 0) {\n    locale = 'en';\n  }\n  if (!('PluralRules' in Intl) || new Intl.PluralRules('en', {\n    minimumFractionDigits: 2\n  }).select(1) === 'one' || !supportedLocalesOf(locale)) {\n    return locale ? (0, intl_localematcher_1.match)([locale], supported_locales_generated_1.supportedLocales, 'en') : undefined;\n  }\n}\nexports.shouldPolyfill = shouldPolyfill;","map":{"version":3,"names":["Object","defineProperty","exports","value","shouldPolyfill","intl_localematcher_1","require","supported_locales_generated_1","supportedLocalesOf","locale","locales","Array","isArray","Intl","PluralRules","length","minimumFractionDigits","select","match","supportedLocales","undefined"],"sources":["C:/TreinaWeb-react/language/node_modules/@formatjs/intl-pluralrules/should-polyfill.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.shouldPolyfill = void 0;\nvar intl_localematcher_1 = require(\"@formatjs/intl-localematcher\");\nvar supported_locales_generated_1 = require(\"./supported-locales.generated\");\nfunction supportedLocalesOf(locale) {\n    if (!locale) {\n        return true;\n    }\n    var locales = Array.isArray(locale) ? locale : [locale];\n    return Intl.PluralRules.supportedLocalesOf(locales).length === locales.length;\n}\nfunction shouldPolyfill(locale) {\n    if (locale === void 0) { locale = 'en'; }\n    if (!('PluralRules' in Intl) ||\n        new Intl.PluralRules('en', { minimumFractionDigits: 2 }).select(1) ===\n            'one' ||\n        !supportedLocalesOf(locale)) {\n        return locale ? (0, intl_localematcher_1.match)([locale], supported_locales_generated_1.supportedLocales, 'en') : undefined;\n    }\n}\nexports.shouldPolyfill = shouldPolyfill;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,cAAc,GAAG,KAAK,CAAC;AAC/B,IAAIC,oBAAoB,GAAGC,OAAO,CAAC,8BAA8B,CAAC;AAClE,IAAIC,6BAA6B,GAAGD,OAAO,CAAC,+BAA+B,CAAC;AAC5E,SAASE,kBAAkBA,CAACC,MAAM,EAAE;EAChC,IAAI,CAACA,MAAM,EAAE;IACT,OAAO,IAAI;EACf;EACA,IAAIC,OAAO,GAAGC,KAAK,CAACC,OAAO,CAACH,MAAM,CAAC,GAAGA,MAAM,GAAG,CAACA,MAAM,CAAC;EACvD,OAAOI,IAAI,CAACC,WAAW,CAACN,kBAAkB,CAACE,OAAO,CAAC,CAACK,MAAM,KAAKL,OAAO,CAACK,MAAM;AACjF;AACA,SAASX,cAAcA,CAACK,MAAM,EAAE;EAC5B,IAAIA,MAAM,KAAK,KAAK,CAAC,EAAE;IAAEA,MAAM,GAAG,IAAI;EAAE;EACxC,IAAI,EAAE,aAAa,IAAII,IAAI,CAAC,IACxB,IAAIA,IAAI,CAACC,WAAW,CAAC,IAAI,EAAE;IAAEE,qBAAqB,EAAE;EAAE,CAAC,CAAC,CAACC,MAAM,CAAC,CAAC,CAAC,KAC9D,KAAK,IACT,CAACT,kBAAkB,CAACC,MAAM,CAAC,EAAE;IAC7B,OAAOA,MAAM,GAAG,CAAC,CAAC,EAAEJ,oBAAoB,CAACa,KAAK,EAAE,CAACT,MAAM,CAAC,EAAEF,6BAA6B,CAACY,gBAAgB,EAAE,IAAI,CAAC,GAAGC,SAAS;EAC/H;AACJ;AACAlB,OAAO,CAACE,cAAc,GAAGA,cAAc"},"metadata":{},"sourceType":"script","externalDependencies":[]}